// SPDX-License-Identifier: LGPL-3.0-only
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. !!
pragma solidity ^0.8.4;

interface IAllowanceModule {
    event AddDelegate(address indexed safe, address delegate);
    event DeleteAllowance(
        address indexed safe,
        address delegate,
        address token
    );
    event ExecuteAllowanceTransfer(
        address indexed safe,
        address delegate,
        address token,
        address to,
        uint96 value,
        uint16 nonce
    );
    event PayAllowanceTransfer(
        address indexed safe,
        address delegate,
        address paymentToken,
        address paymentReceiver,
        uint96 payment
    );
    event RemoveDelegate(address indexed safe, address delegate);
    event ResetAllowance(address indexed safe, address delegate, address token);
    event SetAllowance(
        address indexed safe,
        address delegate,
        address token,
        uint96 allowanceAmount,
        uint16 resetTime
    );

    function ALLOWANCE_TRANSFER_TYPEHASH() external view returns (bytes32);

    function DOMAIN_SEPARATOR_TYPEHASH() external view returns (bytes32);

    function NAME() external view returns (string memory);

    function VERSION() external view returns (string memory);

    function allowances(
        address,
        address,
        address
    )
        external
        view
        returns (
            uint96 amount,
            uint96 spent,
            uint16 resetTimeMin,
            uint32 lastResetMin,
            uint16 nonce
        );

    function delegates(
        address,
        uint48
    ) external view returns (address delegate, uint48 prev, uint48 next);

    function delegatesStart(address) external view returns (uint48);

    function tokens(address, address, uint256) external view returns (address);

    function setAllowance(
        address delegate,
        address token,
        uint96 allowanceAmount,
        uint16 resetTimeMin,
        uint32 resetBaseMin
    ) external;

    function resetAllowance(address delegate, address token) external;

    function deleteAllowance(address delegate, address token) external;

    function executeAllowanceTransfer(
        address safe,
        address token,
        address to,
        uint96 amount,
        address paymentToken,
        uint96 payment,
        address delegate,
        bytes memory signature
    ) external;

    function getChainId() external pure returns (uint256);

    function generateTransferHash(
        address safe,
        address token,
        address to,
        uint96 amount,
        address paymentToken,
        uint96 payment,
        uint16 nonce
    ) external view returns (bytes32);

    function getTokens(
        address safe,
        address delegate
    ) external view returns (address[] memory);

    function getTokenAllowance(
        address safe,
        address delegate,
        address token
    ) external view returns (uint256[5] memory);

    function addDelegate(address delegate) external;

    function removeDelegate(address delegate, bool removeAllowances) external;

    function getDelegates(
        address safe,
        uint48 start,
        uint8 pageSize
    ) external view returns (address[] memory results, uint48 next);
}
